=encoding utf8

=head1 NAME

Quiq::Udl - Universal Database Locator

=head1 BASE CLASS

L<Quiq::Hash|https://github.com/s31tz/Quiq/tree/master/pod/class/Quiq/Hash.pod>

=head1 SYNOPSIS

Klasse laden:

  use Quiq::Udl;

Objekt instantiieren:

  my $udlStr = 'dbi#oracle:xyz%xyz_admin:koala3@pluto.gaga.de:1521';
  my $udl = Quiq::Udl->new($udlStr);

UDL aus Konfigurationsdatei:

  my $udl = Quiq::Udl->new('test-db');

UDL-Komponenten:

  print $udl->api,"\n";      # dbi
  print $udl->dbms,"\n";     # oracle
  print $udl->db,"\n";       # xyz
  print $udl->user,"\n";     # xyz_admin
  print $udl->password,"\n"; # koala3
  print $udl->host,"\n";     # pluto.gaga.de
  print $udl->port,"\n";     # 1521
  
  my $optionH = $udl->options;
  while (($key,$val) = each %$optionH) {
      print "$key=$val\n";
  }

UDL als String:

  print $udl->asString,"\n"; # $udlStr

=head1 DESCRIPTION

Ein Universal Database Locator (UDL) adressiert eine Datenbank,
wie ein Universal Resource Locator eine Web-Resource adressiert.

Ein UDL hat den Aufbau:

  api#dbms:db%user:password@host:port;options

Ein Objekt der Klasse kapselt einen UDL und bietet Methoden,
um auf die einzelnen Komponenten zuzugreifen. Kommen Metazeichen
im Passwort oder den Options vor, können diese mit \ maskiert werden.

=head1 ATTRIBUTES

=over 4

=item api => $str

Der Name der Schnittstelle (z.B. "dbi").

=item dbms => $str

Der Name der Datenbanksystems (z.B. oracle, postgresql, sqlite, mysql).

=item db => $str

Der Name der Datenbank.

=item user => $str

Der Name des Benutzers.

=item password => $str

Das Passwort des Benutzers.

=item host => $str

Der Name des Hosts, auf dem die Datenbank sich befindet.

=item port = $str

Der Port, über welchen die Netzverbindung aufgebaut wird.

=item options => \%hash

Referenz auf Hash mit optionalen Angaben.

=back

=head1 METHODS

=head2 Konstruktor

=head3 new() - Instantiiere UDL-Objekt

=head4 Synopsis

  $udl = $class->new;
  $udl = $class->new($udlStr);
  $udl = $class->new(@keyVal);
  $udl = $class->new($name);

=head4 Arguments

=over 4

=item $udlStr

UDL als Zeichenkette.

=item @keyVal

UDL-Komponenten.

=item $name

Name aus Konfigurationsdatei C<~/.db.conf>.

=back

=head4 Returns

UDL-Objekt

=head4 Description

Instantiiere ein UDL-Objekt und liefere eine Referenz auf
dieses Objekt zurück.

=head2 Akzessoren

=head3 api() - Setze/Liefere Wert des Attributs api

=head4 Synopsis

  $api = $udl->api;
  $api = $udl->api($api);

=head3 dbms() - Setze/Liefere Wert des Attributs dbms

=head4 Synopsis

  $dbms = $udl->dbms;
  $dbms = $udl->dbms($dbms);

=head3 db() - Setze/Liefere Wert des Attributs db

=head4 Synopsis

  $db = $udl->db;
  $db = $udl->db($db);

=head3 user() - Setze/Liefere Wert des Attributs user

=head4 Synopsis

  $user = $udl->user;
  $user = $udl->user($user);

=head3 password() - Setze/Liefere Wert des Attributs password

=head4 Synopsis

  $password = $udl->password;
  $password = $udl->password($password);

=head3 host() - Setze/Liefere Wert des Attributs host

=head4 Synopsis

  $host = $udl->host;
  $host = $udl->host($host);

=head3 port() - Setze/Liefere Wert des Attributs port

=head4 Synopsis

  $port = $udl->port;
  $port = $udl->port($port);

=head3 options() - Setze/Liefere Option-Hash

=head4 Synopsis

  $hash = $udl->options;
  $hash = $udl->options($str);
  $hash = $udl->options(@keyVal);
  $hash = $udl->options(\%hash);

=head4 Description

Setze/Liefere Hash mit den UDL-Optionen.

=head2 Klassenmethoden

=head3 split() - Setze/Liefere UDL als Ganzes

=head4 Synopsis

  ($api,$dbms,$db,$user,$password,$host,$port,$options) =
      $udl->split($udl);

=head4 Description

Zerlege den UDL $udl in seine Komponenten und liefere diese zurück.
Für eine Komponente, die nicht im URL enthalten ist, wird ein
Leerstring ('') geliefert.

=head2 Objektmethoden

=head3 apiClass() - API-Klasse

=head4 Synopsis

  $apiClass = $udl->apiClass;

=head4 Description

Liefere die Datanbank API-Klasse. Über diese findet intern der
Verbindungsaufbau zur Datenbank statt.

Die API-Klasse für das DBI-API ist:

  Quiq::Database::Api::Dbi::Connection

=head3 asString() - UDL als String

=head4 Synopsis

  $udlStr = $udl->asString;

=head4 Options

=over 4

=item -secure => $bool (Default: 0)

Ersetze das Passwort durch einen Stern.

=back

=head3 components() - Komponenten des UDL

=head4 Synopsis

  ($api,$dbms,$db,$user,$password,$host,$port,$options) = $udl->components;

=head4 Description

Liefere die Komponenten des UDL in der oben angegebenen Reihenfolge.

=head3 dsn() - DBI DSN-String

=head4 Synopsis

  $dsn = $udl->dsn;

=head4 Description

Liefere den DSN-String, um per DBI->connect() eine
Verbindung zur Datenbank aufzubauen.

=head3 udl() - Setze/Liefere UDL als Ganzes

=head4 Synopsis

  $udl->udl($udlStr);
  $udl->udl(@keyVal);
  $udlStr = $udl->udl;

=head4 Description

Liefere UDL oder setze UDL als Ganzes aus String oder Liste von
Schlüssel/Wert-Paaren. Die Methode liefert keinen Wert zurück.

Der Aufruf ohne Parameter ist identisch zum Aufruf von asString().

=head1 VERSION

1.205

=head1 SOURCE

L<https://github.com/s31tz/Quiq/tree/master/lib/Quiq/Udl.pm>

=head1 AUTHOR

Frank Seitz, L<http://fseitz.de/>

=head1 COPYRIGHT

Copyright (C) 2022 Frank Seitz

=head1 LICENSE

This code is free software; you can redistribute it and/or modify
it under the same terms as Perl itself.
