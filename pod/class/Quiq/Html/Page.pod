=encoding utf8

=head1 NAME

Quiq::Html::Page - HTML-Seite

=head1 BASE CLASS

L<Quiq::Html::Base|https://github.com/s31tz/Quiq/tree/master/pod/class/Quiq/Html/Base.pod>

=head1 SYNOPSIS

  use Quiq::Html::Page;
  
  $h = Quiq::Html::Producer->new;
  
  $obj = Quiq::Html::Page->new(
      body => 'hello world!',
  );
  
  $html = $obj->html($h);

=head1 ATTRIBUTES

=over 4

=item body => $str (Default: '')

Rumpf der Seite.

=item bodyOnly => $bool (Default: 0)

Liefere als Returnwert von asHtml() nur den Body anstelle der
Gesamtseite.

=item comment => $str (Default: undef)

Kommentar am Anfang der Seite.

=item components => \@components

Liste der HTML-Komponenten, die in die Seite eingesetzt werden.
Die Komponentenbestandteile werden automatisch zu den Seitenbestandteilen
hinzugefüht. Im Seiten-HTML-Code wird der HTML-Code der Komponente
an der Postion des Platzhalters __<NAME>__ eingesetzt.

=item encoding => $charset (Default: 'utf-8')

Encoding der Seite, z.B. 'iso-8859-1'.

=item head => $str (Default: '')

Kopf der Seite.

=item load => \@arr

Liste von Ladeanweisungen für CSS- und JavaScript-Dateien. Die
Ladeanweisungen werden vor anderem CSS- und JavaScript-Code
(s. Attribute javaScript und styleSheet) in den Head der Seite
geschrieben. Eine CSS-Datei wird durch die Angabe eines Paars
css => $url, eine JavaScript-Datei durch die Angabe eines Paars
js => $url geladen. Hat $url die Endung .css oder .js, kann die
Typangabe auch weggelassen werden. Beispiel:

  load => [
      css => 'https://code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css',
      js => 'https://code.jquery.com/ui/1.12.1/jquery-ui.min.js',
  ],

Oder kurz (da die Dateiendungen den Typ verraten):

  load => [
      'https://code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css',
      'https://code.jquery.com/ui/1.12.1/jquery-ui.min.js',
  ],

=item noNewline => $bool (Default: 0)

Füge kein Newline am Ende der Seite hinzu.

=item placeholders => \@keyVal (Default: [])

Ersetze im generierten HTML-Code die angegebenen Platzhalter durch
ihre Werte.

=item javaScript => $url|$jsCode|[...] (Default: undef)

URL oder JavaScript-Code am Ende der Seite. Mehrfach-Definition,
wenn Array-Referenz. Das Attribut kann mehrfach auftreten, die
Werte werden zu einer Liste zusammengefügt.

=item javaScriptToHead => $bool (Default: 0)

Setze den JavaScrip-Code nicht an das Ende des Body, sondern in
den Head der HTML-Seite.

=item ready => $jsCode (Default: [])

Führe JavaScript-Code $jsCode aus, wenn das DOM geladen ist.
Dies ist so implementiert, dass der Code in einen jQuery
ready-Handler eingebettet wird:

  $(function() {
      $jsCode
  });

Das Konstrukt setzt also jQuery voraus. Das Attribut kann mehrfach
auftreten, es werden dann mehrere ready-Handler aufgesetzt.

=item styleSheet => $spec | \@specs (Default: undef)

Einzelne Style-Spezifikation oder Liste von Style-Spezifikationen.
Siehe Methode Quiq::Css->style(). Das Attribut kann mehrfach
auftreten, die Werte werden zu einer Liste zusammengefügt.

=item title => $str (Default: undef)

Titel der Seite.

=item topIndentation => $n (Default: 2)

Einrückung des Inhalts der obersten Elemente <head> und <body>.

=back

=head1 METHODS

=head2 Konstruktor

=head3 new() - Konstruktor

=head4 Synopsis

  $obj = $class->new(@keyVal);

=head2 Objektmethoden

=head3 html() - Generiere HTML

=head4 Synopsis

  $html = $obj->html($h);
  $html = $class->html($h,@keyVal);

=head1 VERSION

1.201

=head1 SOURCE

L<https://github.com/s31tz/Quiq/tree/master/lib/Quiq/Html/Page.pm>

=head1 AUTHOR

Frank Seitz, L<http://fseitz.de/>

=head1 COPYRIGHT

Copyright (C) 2022 Frank Seitz

=head1 LICENSE

This code is free software; you can redistribute it and/or modify
it under the same terms as Perl itself.
