=encoding utf8

=head1 NAME

Quiq::Html::Widget::Hidden - Nicht sichtbares und nicht 채nderbares Formularelement

=head1 BASE CLASS

L<Quiq::Html::Widget|https://github.com/s31tz/Quiq/tree/master/pod/class/Quiq/Html/Widget.pod>

=head1 DESCRIPTION

Ein Hidden-Widget kommuniziert unter einem Namen einen oder
mehrere Werte. Das Widget ist f체r den Anwender unsichtbar und
sein Zustand kann von diesem nicht manipuliert werden.

=head1 ATTRIBUTES

=over 4

=item id => $id (Default: undef)

Id.

=item name => $name (Default: undef)

Name.

=item value => $str | \@arr (Default: undef)

Wert bzw. Liste von Werten.

=item hidden => 1

Widget ist unsichtbar. Diese Eigenschaft gilt f체r Hidden-Widgets
immer und ist nicht 채nderbar.

=item ignoreIfNull => $bool (Default: 0)

Generiere Leerstring, wenn Wert Null (undef oder Leerstring) ist.

=item disabled => $bool (Default: 0)

Das Element wird nicht submittet.

=item undefIf => $bool (Default: 0)

Wenn wahr, liefere C<undef> als Widget-Code.

=back

=head1 EXAMPLES

Html::Tag-Objekt instantiieren:

  $obj = Quiq::Html::Tag->new;

Keine Information:

  $html = Quiq::Html::Widget::Hidden->html($h);
  -->
  Leerstring

Wert:

  $html = Quiq::Html::Widget::Hidden->html($h,
      name => 'x',
      value => 4711,
  );
  -->
  <input type="hidden" name="x" value="4711" />\n

Liste von Werten:

  $html = Quiq::Html::Widget::Hidden->html($h,
      name => 'x',
      value => [4711,4712],
  );
  -->
  <input type="hidden" name="x" value="4711" />\n
  <input type="hidden" name="x" value="4712" />\n

=head1 METHODS

=head2 Konstruktor

=head3 new() - Konstruktor

=head4 Synopsis

  $e = $class->new(@keyVal);

=head2 Objektmethoden

=head3 html() - Generiere HTML-Code

=head4 Synopsis

  $html = $e->html($h);
  $html = $class->html($h,@keyVal);

=head1 VERSION

1.204

=head1 SOURCE

L<https://github.com/s31tz/Quiq/tree/master/lib/Quiq/Html/Widget/Hidden.pm>

=head1 AUTHOR

Frank Seitz, L<http://fseitz.de/>

=head1 COPYRIGHT

Copyright (C) 2022 Frank Seitz

=head1 LICENSE

This code is free software; you can redistribute it and/or modify
it under the same terms as Perl itself.
