=encoding utf8

=head1 NAME

Quiq::Gd::Component::ColorLegend - Legende zu einem Farb-Plot

=head1 BASE CLASS

L<Quiq::Gd::Component|https://github.com/s31tz/Quiq/tree/master/pod/class/Quiq/Gd/Component.pod>

=head1 DESCRIPTION

Grafischer Aufbau der Legende:

    [SVG kann nicht in POD eingebettet werden]

=head1 ATTRIBUTES

=over 4

=item width => $int (Default: keiner)

Breite der Legende in Pixeln.

=item axisColor => $color (Default: keiner)

Farbe der Achse, also der Linie und der Ticks.

=item colors => \@colors (Default: [])

Array der Farben.

=item min => $float (Default: keiner)

Kleinster Wert des Wertebereichs.

=item max => $float (Default: keiner)

Größter Wert des Wertebereichs.

=item logarithmic => $bool (Default: 0)

Die Skala erhält eine logarithmische Einteilung (Basis 10).

=item labelColor => $color (Default: keiner)

Farbe der Beschriftung.

=item labelFont => $font (Default: keiner)

Font für die Beschriftung.

=item blockWidth => $int (Default: keiner)

Breite der Überschreitungsblöcke in Pixeln. Hat nur eine Bedeutung, wenn
C<ltColor> und/oder C<gtColor> definiert sind.

=item blockHeight => $int (Default: keiner)

Höhe der Farbblöcke in Pixeln.

=item blockGap => $int (Default: keiner)

Lücke zwischen den Farbblöcken in Pixeln. Hat nur eine Bedeutung, wenn
C<blockLtColor> und/oder C<blockGtColor> definiert sind.

=item blockLtColor => $color (Default: keiner)

Farbe des Blocks, der die Werte, die I<min> unterschreiten, repräsentiert.

=item blockGtColor => $color (Default: keiner)

Farbe des Blocks, der die Werte, die I<max> überschreiten, repräsentiert.

=item title => $str (Default: undef)

Titel (optional).

=item titleColor => $color (Default: keiner)

Farbe des Titels.

=item titleFont => $font (Default: keiner)

Font des Titels.

=item titleGap => $int (Default: keiner)

Vertikale Lücke zwischen dem Titel und den Farbblöcken in Pixeln.

=back

=head1 EXAMPLE

Eine Farblegende mit Titel. Die Höhe des Bildes geben wir nicht vor,
sie richtet sich nach der Höhe der Grafik. Wir ermitteln sie mit
$g->height. Die Farben definieren wir erst beim Rendern, da das Bild
bei der Instantiierung des Grafik-Objekts noch nicht existiert.

  my $width = 400;
  
  my $g = Quiq::Gd::Component::ColorLegend->new(
      title => 'Test',
      titleFont => Quiq::Gd::Font->new('Blob/font/pala.ttf,14'),
      labelFont => Quiq::Gd::Font->new('Blob/font/pala.ttf,10'),
      width => $width,
      min => 0,
      max => 100,
      logarithmic => 0,
      blockWidth => 50,
      blockHeight => 18,
      blockGap => 20,
  );
  
  $img = Quiq::Gd::Image->new($width,$g->height);
  my $white = $img->background('ffffff');
  $img->transparent($white);
  
  $g->render($img,0,0,
      colors => scalar $img->rainbowColors(512),
      blockLtColor => $img->color('000080'),
      blockGtColor => $img->color('ff00ff'),
      titleColor => $img->color('ff00ff'),
      labelColor => $img->color('ff00ff'),
  );

Erzeugte Grafik (der Rahmen ist per CSS hinzugefügt):

    [Bild nur im Browser sichtbar]

=head1 METHODS

=head2 Konstruktor

=head3 new() - Konstruktor

=head4 Synopsis

  $g = $class->new(@keyVal);

=head4 Description

Instantiiere die Legende mit den Eigenschaften @keyVal
(s. Abschnitt L<ATTRIBUTES|"ATTRIBUTES">) und liefere eine Referenz auf das Objekt
zurück.

=head2 Zeichnen

=head3 render() - Zeichne Legende

=head4 Synopsis

  $g->render($img,$x,$y,@keyVal);
  $class->render($img,$x,$y,@keyVal);

=head4 Description

Zeichne die Legende in Bild $img an Position ($x,$y).

=head2 Objektmethoden

=head3 height() - Höhe der Farb-Legende

=head4 Synopsis

  $height = $g->height;

=head4 Description

Liefere die Höhe der Legende. Die Höhe wird aus den Komponenten berechnet.

=head1 VERSION

1.183

=head1 SOURCE

L<https://github.com/s31tz/Quiq/tree/master/lib/Quiq/Gd/Component/ColorLegend.pm>

=head1 AUTHOR

Frank Seitz, L<http://fseitz.de/>

=head1 COPYRIGHT

Copyright (C) 2020 Frank Seitz

=head1 LICENSE

This code is free software; you can redistribute it and/or modify
it under the same terms as Perl itself.
