=encoding utf8

=head1 NAME

Quiq::LockedCounter - Persistenter Zähler mit Lock

=head1 BASE CLASS

L<Quiq::Object|https://github.com/s31tz/Quiq/tree/master/pod/class/Quiq/Object.pod>

=head1 SYNOPSIS

  use Quiq::LockedCounter;
  
  $cnt = Quiq::LockedCounter->new($file)->increment;
  ...
  $n = $cnt->count;

=head1 DESCRIPTION

Die Klasse realisiert einen Zähler mit Exklusiv-Lock. Der
Zählerstand wird in einer Datei gespeichert. Die Datei wird
gelockt. Der Lock wird bis zur Destrukturierung des Objekts
gehalten.

=head1 METHODS

=head2 Konstruktor

=head3 new() - Instantiiere Counter

=head4 Synopsis

  $ctr = Quiq::LockedCounter->new($file);

=head4 Returns

Objekt

=head2 Operationen

=head3 count() - Liefere Zählerstand

=head4 Synopsis

  $n = $ctr->count;

=head4 Returns

Zählerstand (Integer)

=head3 file() - Liefere Dateipfad

=head4 Synopsis

  $file = $ctr->file;

=head4 Returns

Dateipfad (String)

=head3 increment() - Inkrementiere Zählerstand

=head4 Synopsis

  $ctr = $ctr->increment;

=head4 Returns

Objekt

=head1 VERSION

1.172

=head1 SOURCE

L<https://github.com/s31tz/Quiq/tree/master/lib/Quiq/LockedCounter.pm>

=head1 AUTHOR

Frank Seitz, L<http://fseitz.de/>

=head1 COPYRIGHT

Copyright (C) 2020 Frank Seitz

=head1 LICENSE

This code is free software; you can redistribute it and/or modify
it under the same terms as Perl itself.
