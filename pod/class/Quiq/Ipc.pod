=encoding utf8

=head1 NAME

Quiq::Ipc - Interprozesskommunikation

=head1 BASE CLASS

L<Quiq::Object|https://github.com/s31tz/Quiq/tree/master/pod/class/Quiq/Object.pod>

=head1 METHODS

=head2 Methods

=head3 filter() - Rufe ein Kommando als Filter auf

=head4 Synopsis

  $out = Quiq::Ipc->filter($cmd,$in,@opt);
  ($out,$err) = Quiq::Ipc->filter($cmd,$in,@opt);
  $out = Quiq::Ipc->filter($cmd,@opt);
  ($out,$err) = Quiq::Ipc->filter($cmd,@opt);

=head4 Options

=over 4

=item -ignoreError => $bool (Default: 0)

Ignoriere Exitcode von Kommando $cmd. D.h. es wird keine Exception
geworfen, wenn das Kommando fehlschl채gt.

=back

=head4 Description

Rufe Kommando $cmd als Filter auf. Das Kommando erh채lt die Daten
$in auf stdin und liefert die Daten $out und $err auf stdout
bzw. stderr. In Skalarkontext wird nur die Ausgabe auf stdout
geliefert.

Achtung: Der Aufruf kann zu einem SIGPIPE f체hren, wenn per
Parameter $in Daten an $cmd gesendet werden und das Kommando
terminiert, bevor es alle Daten gelesen hat. Insbesondere sollten
keine Daten an ein Kommando gesendet werden, das nicht von stdin
liest!

=head3 pipeTo() - Pipe Daten an Kommando

=head4 Synopsis

  $class->pipeTo($data,$cmd,@options);

=head4 Arguments

=over 4

=item $data

Die Daten, die an das Kommando gepiped werden.

=item $cmd

Das Kommando, das die Daten von stdin liest und verarbeitet.

=back

=head4 Options

=over 4

=item -encoding => $encoding

Mit welchem Encoding die Daten geschrieben werden.

=item -toStdout => $bool (Default: 0)

Pipe die Daten nicht an das Kommando, sondern schreibe sie nach STDOUT.
Dies ist n체tzlich, wenn das Kommando ein Pager ist, der nicht gestartet
werden soll, wenn STDOUT kein Terminal ist:

  Quiq::Ipc->pipeTo($data,'less -R',-toStdout=>!-t);

=back

=head4 Description

Pipe Daten $data an Kommando $cmd.

=head1 VERSION

1.205

=head1 SOURCE

L<https://github.com/s31tz/Quiq/tree/master/lib/Quiq/Ipc.pm>

=head1 AUTHOR

Frank Seitz, L<http://fseitz.de/>

=head1 COPYRIGHT

Copyright (C) 2022 Frank Seitz

=head1 LICENSE

This code is free software; you can redistribute it and/or modify
it under the same terms as Perl itself.
